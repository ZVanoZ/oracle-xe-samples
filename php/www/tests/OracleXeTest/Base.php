<?php

namespace OracleXeTest\Db;

use Dio\Helper\ServiceManager as HelperServiceManager;
use DioLaminas\Db\Adapter\Adapter;
use DioLaminas\Db\Adapter\Driver\Oci8\Connection;
use DioTestBootstrap\Bootstrap;
use Laminas\Mvc\Application;
use Laminas\ServiceManager\ServiceManager;
use Laminas\Stdlib\ArrayUtils;
use PHPUnit\Framework\TestCase;

class Base
    extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        if (!getenv('TESTS_DB_ORACLE_IS_ENABLED')) {
            $this->markTestSkipped('Oracle integration test disabled');
        }

        if (!extension_loaded('oci8')) {
            $this->fail('The phpunit group integration-mysqli was enabled, but the extension "oci8" is not loaded.');
        }
    }

    /**
     * @return resource
     */
    protected function createOci8Connection()
    {
        $host = getenv('TESTS_DB_ORACLE_HOSTNAME');
        $port = getenv('TESTS_DB_ORACLE_PORT');
        $username = getenv('TESTS_DB_ORACLE_USERNAME');
        $password = getenv('TESTS_DB_ORACLE_PASSWORD');
        $serviceName = getenv('TESTS_DB_ORACLE_SERVICE');
        $characterSet = getenv('TESTS_DB_ORACLE_CHARSET');
        $connectionString = <<<TEXT
( DESCRIPTION =
    (
        ADDRESS=(PROTOCOL=TCP)(HOST=$host)(PORT=$port)
    )
    (
        CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=$serviceName))
    )
TEXT;
        $sessionMode = OCI_DEFAULT;

        $connection = oci_connect($username, $password, $connectionString, $characterSet, $sessionMode);
        if (!is_resource($connection)){
            throw new \Exception('Can\'t create connection');
        }
        return $connection;
    }
}
